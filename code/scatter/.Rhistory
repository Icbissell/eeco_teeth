install.packages("dlnm")
library(dlnm)
Chicago <- chicagoNMMAPS
Chicago$date <- as.Date(Chicago$date)
View(Chicago)
library(dplyr)
tbl_df(Chicago)
a <- tbl_df(Chicago)
View(a)
View(Chicago)
View(a)
glimpse(a)
summarise(a$year)
a$year <- as.Date.default(a$year)
summarise(a$year)
mutate(Chicago, year.mean = summarise(Chicago, avg = mean(Chicago$temp)))
library(ape)
library(dplyr)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/Stomiatiformes_phylogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
prune.tree <- drop.tip(tree,miss.tips)
plot(prune.tree)
library(ape)
library(dplyr)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
library(ape)
library(dplyr)
plot(prune.tree, mar = c(0,0,1,0))
library(ape)
library(dplyr)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
require(phytools)
library(ape)
library(dplyr)
require(phytools)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
fitARD
plot(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from unequal forward and backward rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
library(ape)
library(dplyr)
require(phytools)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
fitARD
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from unequal forward and backward rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
library(ape)
library(dplyr)
require(phytools)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
plotTree(prune.tree, mar = c(0,0,1,0))
View(prune.data)
library(ape)
library(dplyr)
require(phytools)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
fitARD
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from unequal forward and backward rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
fitARD
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
library(ape)
library(dplyr)
require(phytools)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
# fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
# fitARD
#
# plotTree(prune.tree, mar = c(0,0,1,0))
# title(main = "Ancestral states from unequal forward and backward rate model")
# nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
#            pie=fitARD$lik.anc,piecol=cols,cex=0.5)
# tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
# add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
#                   y=0.8*par()$usr[3] + 3,fsize=0.8)
mtrees<-make.simmap(prune.tree,feed.mode,model="ER",nsim=1000)
pd<-summary(mtrees)
plot(pd,ftype="i", mar = c(0,0,1,0), colors=cols,ylim=c(-2,Ntip(prune.tree)))
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
title(main = "Ancestral states from 10000 stochastic character maps")
library(ape)
library(dplyr)
require(phytools)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
# fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
# fitARD
#
# plotTree(prune.tree, mar = c(0,0,1,0))
# title(main = "Ancestral states from unequal forward and backward rate model")
# nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
#            pie=fitARD$lik.anc,piecol=cols,cex=0.5)
# tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
# add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
#                   y=0.8*par()$usr[3] + 3,fsize=0.8)
mtrees<-make.simmap(prune.tree,feed.mode,model="ER",nsim=1000)
pd<-summary(mtrees)
plot(pd,ftype="i", mar = c(0,0,1,0), colors=cols,ylim=c(-2,Ntip(prune.tree)))
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
title(main = "Ancestral states from 10000 stochastic character maps")
fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
fitARD
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from unequal forward and backward rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
library(ape)
library(dplyr)
require(phytools)
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
#
# fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
# fitARD
#
# plotTree(prune.tree, mar = c(0,0,1,0))
# title(main = "Ancestral states from unequal forward and backward rate model")
# nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
#            pie=fitARD$lik.anc,piecol=cols,cex=0.5)
# tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
# add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
#                   y=0.8*par()$usr[3] + 3,fsize=0.8)
mtrees<-make.simmap(prune.tree,feed.mode,model="ER",nsim=1000)
pd<-summary(mtrees)
plot(pd,ftype="i", mar = c(0,0,1,0), colors=cols,ylim=c(-2,Ntip(prune.tree)))
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
title(main = "Ancestral states from 10000 stochastic character maps")
library(ape)
library(dplyr)
require(phytools)
#import tooth data
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
#import tree
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
#find tips not in tooth data and prune from tree
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
#remove duplicates
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
#put dataframe into usable matrix and set names
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
#using ace package, run single rate model
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
##### variable rate model ... I dont know why its not working right now
# fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
# fitARD
#
# plotTree(prune.tree, mar = c(0,0,1,0))
# title(main = "Ancestral states from unequal forward and backward rate model")
# nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
#            pie=fitARD$lik.anc,piecol=cols,cex=0.5)
# tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
# add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
#                   y=0.8*par()$usr[3] + 3,fsize=0.8)
#use an MCMC approach with 10,000 trees
mtrees<-make.simmap(prune.tree,feed.mode,model="ER",nsim=1000)
pd<-summary(mtrees)
plot(pd,ftype="i", mar = c(0,0,1,0), colors=cols,ylim=c(-2,Ntip(prune.tree)))
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
title(main = "Ancestral states from 10000 stochastic character maps")
data <- read.csv("/Users/icbissell/Desktop/Week3_Group_Exercise_Chicago_Heatwave.csv")
#import tree
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
plot(tree)
plot(tree)
library(ape)
library(dplyr)
require(phytools)
#import tooth data
data <- read.csv("/Users/icbissell/Documents/research/cyclothone/tooth_data.csv")
#import tree
tree <- read.tree("/Users/icbissell/Documents/research/cyclothone/cladogram.tre")
#find tips not in tooth data and prune from tree
miss.tips <- subset(tree$tip.label, !(tree$tip.label %in% data$taxon))
prune.tree <- drop.tip(tree,miss.tips)
#remove duplicates
prune.data <- data[data$taxon %in% prune.tree$tip.label, ]
prune.data <- prune.data[!duplicated(prune.data), ]
#make sure frames have same order
match_indices <- match(prune.tree$tip.label, prune.data$taxon)
prune.data <- prune.data[match_indices, ]
#put dataframe into usable matrix and set names
char_matrix <- as.matrix(prune.data[, -1])
rownames(char_matrix) <- prune.data$taxon
feed.mode<-setNames(char_matrix[,1],rownames(char_matrix))
feed.mode
#using ace package, run single rate model
fitER <- ace(feed.mode,prune.tree,model="ER",type="discrete")
fitER
fitER
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
#### variable rate model ... I dont know why its not working right now
fitARD<-ace(feed.mode,prune.tree,model="ARD",type="discrete")
fitARD
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from unequal forward and backward rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
#use an MCMC approach with 10,000 trees
mtrees<-make.simmap(prune.tree,feed.mode,model="ER",nsim=1000)
pd<-summary(mtrees)
plot(pd,ftype="i", mar = c(0,0,1,0), colors=cols,ylim=c(-2,Ntip(prune.tree)))
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
title(main = "Ancestral states from 10000 stochastic character maps")
#use an MCMC approach with 10,000 trees
mtrees<-make.simmap(prune.tree,feed.mode,model="ER",nsim=1000)
pd<-summary(mtrees)
plot(pd,ftype="i", mar = c(0,0,1,0), colors=cols,ylim=c(-2,Ntip(prune.tree)))
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
title(main = "Ancestral states from 10000 stochastic character maps")
cols<-setNames(palette()[1:length(unique(feed.mode))],sort(unique(feed.mode)))
plotTree(prune.tree, mar = c(0,0,1,0))
title(main = "Ancestral states from single rate model")
nodelabels(node=1:prune.tree$Nnode+Ntip(prune.tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(char_matrix,sort(unique(char_matrix))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3] + 3,fsize=0.8)
View(tree)
tree[["tip.label"]]
knitr::opts_chunk$set(echo = TRUE)
#set working directory
setwd("/Users/icbissell/Documents/classes/fall_23/epi/lab_1/")
#import data
data <- read.csv("NYC_Asthma_ED_visits_MayJune_2023.csv")
View(data)
library(dplyr)
library(dplyr)
#set working directory
setwd("/Users/icbissell/Documents/classes/fall_23/epi/lab_1/")
#import data
data <- read.csv("NYC_Asthma_ED_visits_MayJune_2023.csv")
View(data)
view(data)
View(data)
View(data)
plot(data$Date, data$Asthma_ED_visits)
View(data)
df <- read.csv("NYC_Asthma_ED_visits_MayJune_2023.csv")
View(df)
ggplot(data = df, aes(Date, Asthma_ED_Visits, group = Age.Group)) +
geom_line()
library(dplyr)
library(ggplot2)
#set working directory
setwd("/Users/icbissell/Documents/classes/fall_23/epi/lab_1/")
#import data
df <- read.csv("NYC_Asthma_ED_visits_MayJune_2023.csv")
#quickly plot data
ggplot(data = df, aes(Date, Asthma_ED_Visits, group = Age.Group)) +
geom_line()
library(dplyr)
library(ggplot2)
#set working directory
setwd("/Users/icbissell/Documents/classes/fall_23/epi/lab_1/")
#import data
df <- read.csv("NYC_Asthma_ED_visits_MayJune_2023.csv")
#quickly plot data
ggplot(data = df, aes(Date, Asthma_ED_visits, group = Age.Group)) +
geom_line()
